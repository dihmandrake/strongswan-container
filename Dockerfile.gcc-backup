ARG STRONGSWAN_PREFIX="/usr"
ARG STRONGSWAN_SYS_CONF_DIR="/etc/strongswan"
ARG STRONGSWAN_LIBEXEC_DIR="/usr/libexec"
ARG STRONGSWAN_IPSEC_DIR="/usr/libexec/ipsec"
#ARG STRONGSWAN_LIB_DIR="/usr/lib"
#ARG STRONGSWAN_IPSEC_LIB_DIR="/usr/lib/ipsec"
ARG STRONGSWAN_PID_DIR="/var/run"

ARG ROOT_FOLDER_STRUCTURE="/strongswan"


#FROM buildpack-deps:bullseye as gcc
#
#RUN set -ex; \
#	if ! command -v gpg > /dev/null; then \
#		apt-get update; \
#		apt-get install -y --no-install-recommends \
#			gnupg \
#			dirmngr \
#		; \
#		rm -rf /var/lib/apt/lists/*; \
#	fi
#
## https://gcc.gnu.org/mirrors.html
#ENV GPG_KEYS \
## 1024D/745C015A 1999-11-09 Gerald Pfeifer <gerald@pfeifer.com>
#	B215C1633BCA0477615F1B35A5B3A004745C015A \
## 1024D/B75C61B8 2003-04-10 Mark Mitchell <mark@codesourcery.com>
#	B3C42148A44E6983B3E4CC0793FA9B1AB75C61B8 \
## 1024D/902C9419 2004-12-06 Gabriel Dos Reis <gdr@acm.org>
#	90AA470469D3965A87A5DCB494D03953902C9419 \
## 1024D/F71EDF1C 2000-02-13 Joseph Samuel Myers <jsm@polyomino.org.uk>
#	80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C \
## 2048R/FC26A641 2005-09-13 Richard Guenther <richard.guenther@gmail.com>
#	7F74F97C103468EE5D750B583AB00996FC26A641 \
## 1024D/C3C45C06 2004-04-21 Jakub Jelinek <jakub@redhat.com>
#	33C235A34C46AA3FFB293709A328C3A2C3C45C06 \
## 4096R/09B5FA62 2020-05-28 Jakub Jelinek <jakub@redhat.com>
#	D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62
#
#RUN set -ex; \
#	for key in $GPG_KEYS; do \
#		gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
#	done
#
## https://gcc.gnu.org/mirrors.html
#ENV GCC_MIRRORS \
#		https://ftpmirror.gnu.org/gcc \
#		https://mirrors.kernel.org/gnu/gcc \
#		https://bigsearcher.com/mirrors/gcc/releases \
#		http://www.netgull.com/gcc/releases \
#		https://ftpmirror.gnu.org/gcc \
## only attempt the origin FTP as a mirror of last resort
#		ftp://ftp.gnu.org/gnu/gcc
#
## Last Modified: 2021-04-27
#ENV GCC_VERSION 11.1.0
## Docker EOL: 2022-10-27
#
#RUN set -ex; \
#	\
#	savedAptMark="$(apt-mark showmanual)"; \
#	apt-get update; \
#	apt-get install -y --no-install-recommends \
#		dpkg-dev \
#		flex \
#	; \
#	rm -r /var/lib/apt/lists/*; \
#	\
#	_fetch() { \
#		local fetch="$1"; shift; \
#		local file="$1"; shift; \
#		for mirror in $GCC_MIRRORS; do \
#			if curl -fL "$mirror/$fetch" -o "$file"; then \
#				return 0; \
#			fi; \
#		done; \
#		echo >&2 "error: failed to download '$fetch' from several mirrors"; \
#		return 1; \
#	}; \
#	\
#	_fetch "gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig" 'gcc.tar.xz.sig'; \
#	_fetch "gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz" 'gcc.tar.xz'; \
#	gpg --batch --verify gcc.tar.xz.sig gcc.tar.xz; \
#	mkdir -p /usr/src/gcc; \
#	tar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1; \
#	rm gcc.tar.xz*; \
#	\
#	cd /usr/src/gcc; \
#	\
## "download_prerequisites" pulls down a bunch of tarballs and extracts them,
## but then leaves the tarballs themselves lying around
#	./contrib/download_prerequisites; \
#	{ rm *.tar.* || true; }; \
#	\
## explicitly update autoconf config.guess and config.sub so they support more arches/libcs
#	for f in config.guess config.sub; do \
#		wget -O "$f" "https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb"; \
## find any more (shallow) copies of the file we grabbed and update them too
#		find -mindepth 2 -name "$f" -exec cp -v "$f" '{}' ';'; \
#	done; \
#	\
#	dir="$(mktemp -d)"; \
#	cd "$dir"; \
#	\
#	extraConfigureArgs='--enable-static-nss'; \
#	dpkgArch="$(dpkg --print-architecture)"; \
#	case "$dpkgArch" in \
## with-arch: https://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-6/debian/rules2?revision=9450&view=markup#l491
## with-float: https://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-6/debian/rules.defs?revision=9487&view=markup#l416
## with-mode: https://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-6/debian/rules.defs?revision=9487&view=markup#l376
#		armel) \
#			extraConfigureArgs="$extraConfigureArgs --with-arch=armv4t --with-float=soft" \
#			;; \
#		armhf) \
#			extraConfigureArgs="$extraConfigureArgs --with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb" \
#			;; \
#		\
## with-arch-32: https://anonscm.debian.org/viewvc/gcccvs/branches/sid/gcc-6/debian/rules2?revision=9450&view=markup#l590
#		i386) \
#			osVersionID="$(set -e; . /etc/os-release; echo "$VERSION_ID")"; \
#			case "$osVersionID" in \
#				8) extraConfigureArgs="$extraConfigureArgs --with-arch-32=i586" ;; \
#				*) extraConfigureArgs="$extraConfigureArgs --with-arch-32=i686" ;; \
#			esac; \
## TODO for some reason, libgo + i386 fails on https://github.com/gcc-mirror/gcc/blob/gcc-7_1_0-release/libgo/runtime/proc.c#L154
## "error unknown case for SETCONTEXT_CLOBBERS_TLS"
#			;; \
#	esac; \
#	\
#	gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"; \
#	/usr/src/gcc/configure \
#		--build="$gnuArch" \
#		--disable-multilib \
#		--enable-languages=c \
#		$extraConfigureArgs \
#	; \
#	make -j "$(nproc)"; \
#	make install-strip; \
#	\
#	cd ..; \
#	\
#	rm -rf "$dir" /usr/src/gcc; \
#	\
#	apt-mark auto '.*' > /dev/null; \
#	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
#	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
#
## gcc installs .so files in /usr/local/lib64 (and /usr/local/lib)...
#RUN set -ex; \
## this filename needs to sort higher than all the architecture filenames ("aarch64-...", "armeabi...", etc)
#	{ echo '/usr/local/lib64'; echo '/usr/local/lib'; } > /etc/ld.so.conf.d/000-local-lib.conf; \
#	ldconfig -v
#
## ensure that alternatives are pointing to the new compiler and that old one is no longer used
#RUN set -ex; \
#	dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc; \
#	dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++; \
#	dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran; \
#	update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999



FROM gcc:11.1.0 as strongswan-configure

COPY strongswan "/strongswan-src"

# hadolint ignore=DL3003,DL3008
RUN set -eux \
    && apt-get update \
    # Requirments for the autogen.sh
    && apt-get install --no-install-recommends -y automake autoconf libtool pkg-config gettext perl python flex bison gperf \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && cd "/strongswan-src" \
    && ./autogen.sh


FROM dihmandrake/gcc-static-nss:11.1.0 as strongswan-build

ARG STRONGSWAN_PREFIX
ARG STRONGSWAN_SYS_CONF_DIR
ARG STRONGSWAN_LIBEXEC_DIR
ARG STRONGSWAN_IPSEC_DIR
#ARG STRONGSWAN_LIB_DIR
#ARG STRONGSWAN_IPSEC_LIB_DIR
ARG STRONGSWAN_PID_DIR

ARG GCC_MARCH_AMD64="silvermont"
ARG GCC_MTUNE_AMD64="silvermont"

#COPY --from=gcc "/" "/"
COPY --from=strongswan-configure "/strongswan-src" "/strongswan-src"

# hadolint ignore=DL3003,DL3008
RUN set -eux \
    && apt-get update \
    # Enforce latest openssl version
    && apt-get install --no-install-recommends --upgrade -y libssl-dev \
    # Build requirements for StrongSwan
        bison flex gperf \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && cd "/strongswan-src" \
    # TODO Require flags for static nss for name resolution with getaddrinfo()
    && CFLAGS_SECURITY="-fPIE -fstack-protector-strong -Wstack-protector --param ssp-buffer-size=4 -fstack-clash-protection -D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security" \
    && export CFLAGS="-O2 -pipe -static -march=${GCC_MARCH_AMD64} -mtune=${GCC_MTUNE_AMD64} ${CFLAGS_SECURITY}" \
    && LDFLAGS_SECURITY="-Wl,-z,relro -Wl,-z,now" \ 
    && export LDFLAGS="--static -pthread -Bstatic ${LDFLAGS_SECURITY}" \
    && ./configure \
        # Internal paths
        --prefix="${STRONGSWAN_PREFIX}" \
        --sysconfdir="${STRONGSWAN_SYS_CONF_DIR}" \
        --libexecdir="${STRONGSWAN_LIBEXEC_DIR}" \
        #--with-strongswan-conf=SYSCONFDIR/strongswan.conf \
        #--with-swanctldir=SYSCONFDIR/swanctl \
        #--with-resolv-conf=/etc/resolv.conf \
        --with-piddir="${STRONGSWAN_PID_DIR}" \
        --with-ipsecdir="${STRONGSWAN_IPSEC_DIR}" \
        #--libdir="${STRONGSWAN_LIB_DIR}" \
        #--with-ipseclibdir="${STRONGSWAN_IPSEC_LIB_DIR}" \
        # For static compile
        --disable-shared --enable-static --enable-monolithic \
        # Reduce priviliges of the daemon; TODO validate option
        #--with-capabilities=native \
        # Disable all options and enable on demand; Crypto is based on OpenSSL and not in-tree
        --disable-defaults \
        # Enable default requirements
        --enable-charon --enable-ikev2 --enable-kernel-netlink --enable-nonce --enable-swanctl --enable-socket-default --enable-vici --enable-updown \
        # Enable certficiate and key handeling
        #--enable-attr --enable-pem --enable-pubkey --enable-revocation \
        #--enable-pgp --enable-pkcs1 --enable-pkcs7 --enable-pkcs8 --enable-pkcs12 \
        # Enable crl fetchers; Currently broken for static compile curl and openldap
        #--enable-curl --enable-ldap \
        #--enable-files \
        # OpenSSL for crypto; # TODO Validate aes-ni and sha-ni (At least the instructions are compiled in)
        --enable-openssl \
        #--enable-af-alg \
        # Enable security plugins
        --enable-addrblock --enable-duplicheck \
        # Enable EAP plugins \
        --enable-eap-radius \
        #--enable-eap-identity --enable-eap-dynamic \
        # Enable network plugins
        --enable-farp --enable-dhcp --enable-ha \
        # TODO Look into --enable-forecast: Might be required for WOL
        # TODO Look into --enable-connmark for correct connection setup
    && make -j "$(nproc)" install


# Not for crypto plugins
# Enable some crypto plugins
#--enable-aesni --enable-chapoly --enable-gcm --enable-sha3 \


FROM busybox:stable as folder-structure

ARG STRONGSWAN_PREFIX
ARG STRONGSWAN_SYS_CONF_DIR
ARG STRONGSWAN_IPSEC_DIR
ARG STRONGSWAN_PID_DIR
ARG ROOT_FOLDER_STRUCTURE

#COPY --from=strongswan-build /usr/lib/ipsec ${ROOT_FOLDER_STRUCTURE}/usr/lib/ipsec # Libs are not required in the image
#COPY --from=strongswan-build "${STRONGSWAN_IPSEC_LIB_DIR}" "${ROOT_FOLDER_STRUCTURE}/${STRONGSWAN_IPSEC_DIR}"
COPY --from=strongswan-build "${STRONGSWAN_IPSEC_DIR}" "${ROOT_FOLDER_STRUCTURE}/${STRONGSWAN_IPSEC_DIR}"
COPY --from=strongswan-build "${STRONGSWAN_PREFIX}/sbin/swanctl" "${ROOT_FOLDER_STRUCTURE}/${STRONGSWAN_PREFIX}/sbin/swanctl"
COPY --from=strongswan-build "${STRONGSWAN_SYS_CONF_DIR}" "${ROOT_FOLDER_STRUCTURE}/${STRONGSWAN_SYS_CONF_DIR}"

COPY "/entrypoint.sh" "${ROOT_FOLDER_STRUCTURE}/entrypoint.sh"

RUN set -eux \
    # Run dir for the the sockets
    && mkdir -p "${ROOT_FOLDER_STRUCTURE}/${STRONGSWAN_PID_DIR}" \
#    && chown 20001:20001 "${ROOT_FOLDER_STRUCTURE}/${STRONGSWAN_PID_DIR}" \
    # Utils that are likely required for basic scripting
    && mkdir -p "${ROOT_FOLDER_STRUCTURE}/bin" \
    && cp "/bin/sh" "${ROOT_FOLDER_STRUCTURE}/bin/sh" \
    && cp "/bin/sh" "${ROOT_FOLDER_STRUCTURE}/bin/sleep" \
    && cp "/bin/ip" "${ROOT_FOLDER_STRUCTURE}/bin/ip" \
    && cp "/bin/iproute" "${ROOT_FOLDER_STRUCTURE}/bin/iproute" \
    && cp "/bin/cat" "${ROOT_FOLDER_STRUCTURE}/bin/cat" \
    && cp "/bin/ls" "${ROOT_FOLDER_STRUCTURE}/bin/ls"

COPY "strongswan-config/charon-logging.conf" "${ROOT_FOLDER_STRUCTURE}/${STRONGSWAN_SYS_CONF_DIR}/strongswan.d/charon-logging.conf"


FROM scratch

ARG STRONGSWAN_IPSEC_DIR
ARG ROOT_FOLDER_STRUCTURE
ENV PATH=/bin:/usr/sbin:/sbin:${STRONGSWAN_IPSEC_DIR}

COPY --from=folder-structure "${ROOT_FOLDER_STRUCTURE}" "/"

HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
    CMD "swanctl" "--stats"
EXPOSE 500/udp \
    4500/udp

#USER 20001:20001

ENTRYPOINT [ "/entrypoint.sh" ]
